apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}adminsvc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}adminapp
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Name }}adminvsvc
  namespace: {{ .Release.Namespace }}
spec:
  hosts:
  - "{{ .Release.Name }}admin.{{ .Release.Namespace }}.rmcloudsoftware.com"
  gateways:
  - {{ .Release.Namespace }}gateway
  http:
  - name: "{{ .Release.Name }}admin-route"
    route:
    - destination:
        host: {{ .Release.Name }}adminsvc
        port:
          number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}adminapp
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}adminapp
      version: v1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Release.Name }}adminapp
        version: v1
    spec:
      serviceAccountName: {{ .Release.Name}}{{ .Release.Namespace}}
      containers:
      - image: "{{ .Values.adminapp.image.repository }}:{{ .Values.adminapp.image.tag }}"
        imagePullPolicy: IfNotPresent
        name: "{{ .Release.Name }}admin"
        ports:
        - containerPort: 8080
        env:
        - name: 'PORT'
          value: '8080'
        - name: 'APP_NAME'
          value: '{{ .Release.Name }}admin'
        - name: 'IMAGEAG'
          value: '{{ .Values.adminapp.image.tag}}'
        - name: "BASE_URL"
          value: "https://{{.Release.Name}}admin.{{.Release.Namespace}}.rmcloudsoftware.com"
        - name: "JWT_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Namespace }}-secrets
              key: "jwtkey"
        - name: "CACHE_SERVER"
          value: "{{ .Release.Name }}-redis-master"
        - name: "CACHE_PORT"
          value: "6379"
        - name: "CACHE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: redisPassword
        - name: "DB_SERVER"
          value: "mgo-{{ .Release.Namespace }}"
        - name: "DB_PORT"
          value: "27017"
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "mgo-{{ .Release.Namespace }}-pulsedb"
              key: username
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "mgo-{{ .Release.Namespace }}-pulsedb"
              key: password
        - name: "EVENTS_SERVER"
          value: "tsdb.{{ .Release.Namespace }}.svc.cluster.local"
        - name: "EVENTS_SERVER_PORT"
          value: "5432"
        - name: "EVENTS_USER"
          value: postgres
        - name: "EVENTS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "tsdb-credentials"
              key: PATRONI_SUPERUSER_PASSWORD
        - name: "MAIL_USER"
          valueFrom:
            secretKeyRef:
              name: "mailer-{{ .Release.Namespace }}-secrets"
              key: username
        - name: "MAIL_PASS"
          valueFrom:
            secretKeyRef:
              name: "mailer-{{ .Release.Namespace }}-secrets"
              key: password
        - name: "MAIL_FROM"
          valueFrom:
            secretKeyRef:
              name: "mailer-{{ .Release.Namespace }}-secrets"
              key: from

